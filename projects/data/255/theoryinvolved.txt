<p>Our basic theory involves the communication between the hand gestures and computer.For doing so, an accelerometer is used,which epending on the acceleration of hand during gesture will communicate the acceleration values to the computer.</p><h4>      <strong>ACCELEROMETER:</strong></h4><ul><li>How does an accelerometer work?</li></ul><p>        Accelerometers  contain microscopic crystal structures that get stressed by accelerative forces, which causes a voltage to be generated. Another way to do it is by sensing changes in capacitance. If you have two microstructures next to each other, they have a certain capacitance between them. If an accelerative force moves one of the structures, then the capacitance will change. Adding some circuitry to convert from capacitance to voltage, and  we get an accelerometer.                                                                                                                                                  With some more coding,these voltage value can be converted to </p><p>acceleration values.In our case we would be using ADXL345 which is a small, thin, ultra low power, 3-axis accelerometer with high resolution (13-bit) measurement up to ±16 <abbr style="background-color: transparent;">g</abbr>. Digital output data is formatted as 16-bit twos complement and is accessible through either a <abbr style="background-color: transparent;">SPI</abbr> (3- or 4- wire) or <abbr style="background-color: transparent;">I2C</abbr> digital interface.</p><ul><li><strong>Communication between Arduino and adxl345</strong></li></ul><p><img src="http://www.eeherald.com/images/i2c_bus1.jpg"></p><p>adxl345 would be communicating with the arduino via I2C communication protocol,which is</p><ul><li>is a multimaster serial single ended computer bus</li><li>I²C uses only two bidirectional <u>open drain </u>lines</li><li>Master node — node that generates the clock and initiates communication with slaves</li><li>Slave node — node that receives the clock and responds when addressed by the master</li></ul><p>The master is initially in master transmit mode by sending a <u>start bit</u> followed by the 7-bit address of the slave it wishes to communicate with, which is finally followed by a single bit representing whether it wishes to write(0) to or read(1) from the slave.</p><h3>Xbee Modules:</h3><p><img src="http://www.technofist.com/project%20images/java-projects/wireless-communication-projects.png"></p><p>   <strong>XBee</strong> is the brand name from Digi International for a family of form factor compatible radio modules</p><p>The XBees can operate either in a transparent data mode or in a packet-based application programming interface (API) mode.In the transparent mode, data coming into the Data IN (DIN) pin is directly transmitted over-the-air to the intended receiving radios without any modification. Incoming packets can either be directly addressed to one target (point-to-point) or broadcast to multiple targets (star). This mode is primarily used in instances where an existing protocol cannot tolerate changes to the data format. AT commands are used to control the radio’s settings. In API mode the data is wrapped in a packet structure that allows for addressing, parameter setting and packet delivery feedback,</p><p> including remote sensing and control of digital I/O and analog input pins</p><h3>Processing:</h3><p><strong>Processing</strong> is an open source programming language and integrated development environment (IDE) built for the electronic arts,new media art, and visual design communities with the purpose of teaching the fundamentals of computer programming in a visual context, and to serve as the foundation for electronic sketchbooks.</p><p>The language builds on the Java language, but uses a simplified syntax and graphics programming model.</p><p>Processing includes a <em>sketchbook</em>, a minimal alternative to an integrated development environment (IDE) for organizing projects.</p><p>Every Processing sketch is actually a subclass of the <code>PApplet</code> inner classes when the code is translated into pure<u> Java</u> before compiling. This means that the use of static variables and methods in classes is prohibited unless you explicitly tell Processing that you want to code in pure Java mode.</p><p>Processing also allows for users to create their own classes within the PApplet sketch. This allows for complex data types that can include any number of arguments and avoids the limitations of solely using standard data types such as: int (integer), char (character), float (real number), and color (RGB, ARGB, hex).</p>