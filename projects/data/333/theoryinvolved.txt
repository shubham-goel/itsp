<ul><li>Our Approach for ostacle detection.</li><li>             We are using ultrasonic sound sensor . This sensor emits ultrasonic sound waves through transmitter and receives those waves by receicer on it.  Firstly sensor emit sound waves they are reflected back and then received by receiver . If there is some object inside threshold value (say 20cm) the sensor will detect it and will send some input to arduino    whichwill process it and according to it bot will avoid the obstacle within the threshold .</li></ul><ul><li>Hexapod</li><li>              Robot walking on six legs which are driven by two motors .  There are three legs on each side.  Consider one side , two legs (front and back) will have same motion i.e, these two legs will be touching ground at the same time when the middle leg is in the air. Same thing happen on the other side. The motion of two legs are related , they are out of phase that is when two legs (front and back) of one side are touching ground the middle leg of other side mustbe touching the ground . Thus three legs are touching the ground atthe same time.</li></ul><pre>&lt;strong&gt;Readjusting the model parameters&lt;/strong&gt;&lt;br&gt;The method used for performing this is based on classic work of BAUM and his colleagues . For this various variables are defined as follows-- &lt;br&gt;alpha(t,i)--- (forward variable) The probability of partial observation O1,O2,O3.... Ot (until time t) and ith state at time t, given the model .&lt;br&gt;beta(t,i)--- (backward variable) The probability of partial observation O(t+1) till end with ith state at time t. &lt;br&gt;gamma(t,i)--- The probability of observation sequence given the model with state ith at time t. &lt;br&gt;eta(t,i,j)--- The probability of observation sequence given the model with state ith at time t and jth at time t+1. &lt;br&gt;delta(t,i)--- The best score(highest probability) along a single path , at time t , which accounts for first t observations and end in state ith. &lt;br&gt;Now we have following adjustments-- &lt;br&gt;pi(i) = expected frequency (number of times) in state ith at time (t=1)= gamma(1,i) &lt;br&gt;A(i,j) = (expected number of transitions from state ith to jth)/(expected number of transitions from state ith) = (summation over t from 1 to T-1 (eta(t,i,j)))/(summation over t from 1 to T-1 (gamma(t,i))) &lt;br&gt;mean(i)= (summation over t from 1 to T (gamma(t,i)*O(t))) /(summation over t form 1 to T (gamma(t,i))) &lt;br&gt;variance(i)=(summation over t from 1 to T (gamma(t,i)*(O(t)-mean(i))*(transpose(O(t)-mean(i)))))/(summation over 1 to T (gamma(t,i))).</pre><p><br>Thus the new model parameters are obtained and the HMM model for the word is obtained.</p><p><strong>Identifying the word</strong><br>The probabilities for a given sequence is obtained with the different HMMs and highest among those is declared as the required word (probability must be greater than a threshold). <br><strong>Obtaining the probability</strong><br>The algorithm used to find the probability is viterbi algorithm. It finds the highest probability among the best state sequence for the given observation sequence.</p><p>Note : We have also attached some of the documents which have the detailed descriptions of the algorithms which we have used in our system.</p><ul><li>To get the description of the bots please refer the documentation which is present along with codes</li></ul>